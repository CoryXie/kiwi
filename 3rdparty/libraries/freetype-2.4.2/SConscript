# Copyright (C) 2010 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

# Notes about updating: ftconfig.h and ftmodule.h must be updated. This is done
# by doing a standard build using configure/make and copying the updated
# versions generated by the build. Note however that the copy of ftconfig.h
# generated by the build system has some platform-specific stuff for type sizes
# at the start, which must be reverted to the auto-detection in the default
# copy of the file.

Import('env')
import os

# Components and their sources.
components = {
	'base': [
		'ftsystem.c',
		'ftdebug.c',
		'ftinit.c',
		'ftbase.c',
		'ftbbox.c',
		'ftbdf.c',
		'ftbitmap.c',
		'ftcid.c',
		'ftfstype.c',
		'ftgasp.c',
		'ftglyph.c',
		'ftgxval.c',
		'ftlcdfil.c',
		'ftmm.c',
		'ftotval.c',
		'ftpatent.c',
		'ftpfr.c',
		'ftstroke.c',
		'ftsynth.c',
		'fttype1.c',
		'ftwinfnt.c',
		'ftxf86.c'
	],
	'truetype': ['truetype.c'],
	'type1': ['type1.c'],
	'cff': ['cff.c'],
	'cid': ['type1cid.c'],
	'pfr': ['pfr.c'],
	'type42': ['type42.c'],
	'winfonts': ['winfnt.c'],
	'pcf': ['pcf.c'],
	'bdf': ['bdf.c'],
	'sfnt': ['sfnt.c'],
	'autofit': ['autofit.c'],
	'pshinter': ['pshinter.c'],
	'raster': ['raster.c'],
	'smooth': ['smooth.c'],
	'cache': ['ftcache.c'],
	'gzip': ['ftgzip.c'],
	'lzw': ['ftlzw.c'],
	'psaux': ['psaux.c'],
	'psnames': ['psmodule.c'],
}

# Generate the source list.
sources = []
for (k, v) in components.items():
	for f in v:
		sources.append(File(os.path.join('src', k, f)))

# Build the library.
env.KiwiLibrary('freetype',
	sources = sources,
	libraries = ['z'],
	include_path = Dir('include'),
	flags = {
		'CCFLAGS': filter(lambda f: f[0:2] != '-W', env['CCFLAGS']) + [
			'-Wall',
			'-Werror',
		],
		'CPPDEFINES': {
			'FT_CONFIG_OPTION_SYSTEM_ZLIB': None,
			'FT_CONFIG_CONFIG_H': '"<ftconfig.h>"',
			'FT2_BUILD_LIBRARY': None,
			'FT_CONFIG_MODULES_H': '"<ftmodule.h>"',
		},
		'CPPPATH': env['CPPPATH'] + [
			'builds/unix',
			# Augh, freetype does nasty defines for header paths
			# that SCons doesn't pick up on.
			'#3rdparty/libraries/freetype-2.4.2/include',
			'#3rdparty/libraries/freetype-2.4.2/include/freetype/config',
		],
	},
)

# Workaround for SCons not picking up dependencies due to macro usage for
# include paths.
env.Depends('include/ft2build.h', 'include/freetype/freetype.h')
env.Depends('include/ft2build.h', 'include/freetype/ftoutln.h')
env.Depends('include/ft2build.h', 'include/freetype/tttables.h')
env.Depends('include/ft2build.h', 'include/freetype/ftsynth.h')
env.Depends('include/ft2build.h', 'include/freetype/ftlcdfil.h')
env.Depends('include/ft2build.h', 'include/freetype/t1tables.h')
env.Depends('include/freetype/freetype.h', 'include/freetype/config/ftconfig.h')
env.Depends('include/freetype/freetype.h', 'include/freetype/fttypes.h')
env.Depends('include/freetype/freetype.h', 'include/freetype/fterrors.h')
env.Depends('include/freetype/config/ftconfig.h', 'include/freetype/config/ftoption.h')
env.Depends('include/freetype/config/ftconfig.h', 'include/freetype/config/ftstdlib.h')
env.Depends('include/freetype/fttypes.h', 'include/freetype/config/ftconfig.h')
env.Depends('include/freetype/fttypes.h', 'include/freetype/ftsystem.h')
env.Depends('include/freetype/fttypes.h', 'include/freetype/ftimage.h')
env.Depends('include/freetype/fterrors.h', 'include/freetype/fterrdef.h')
env.Depends('include/freetype/fterrors.h', 'include/freetype/ftmoderr.h')
