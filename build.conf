###################################
# Build configuration information #
###################################

config = {
	#############################
	# Basic build configuration #
	#############################

	# Extra compilation flags.
	'EXTRA_CCFLAGS': '-O2',
	'EXTRA_CFLAGS': '',
	'EXTRA_CXXFLAGS': '',

	# Path to QEMU binary to use for QEMU test target.
	'QEMU_BINARY': 'qemu',

	# Extra options to pass to QEMU.
	'QEMU_OPTS': '-vga std',

	# Directory to store toolchain in. The directory actually used will be
	# <TOOLCHAIN_DIR>/<TOOLCHAIN_TARGET>
	'TOOLCHAIN_DIR': '/home/alex/bin/kiwi-toolchain',

	# Argument to pass to -j for make when building toolchain.
	'TOOLCHAIN_MAKE_JOBS': 5,

	##########################
	# Architecture selection #
	##########################

	# Architecture to compile for.
	# Options:
	#   x86   - Intel x86-comptible CPUs.
	'ARCH': 'x86',

	# Subarchitecture to compile for. Depends on setting of ARCH.
	# Options (ARCH=x86):
	#   ia32  - 32-bit Intel CPUs.
	#   amd64 - 64-bit AMD64/Intel 64 CPUs.
	'SUBARCH': 'amd64',

	################################
	# Kernel feature configuration #
	################################

	# Symmetric Multiprocessing (SMP) support.
	'SMP': True,

	###########################
	# Kernel debugging output #
	###########################

	# Physical Memory Manager (PMM) debug output.
	#'PMM_DEBUG': True,

	# Vmem allocator debug output.
	#'VMEM_DEBUG': True,

	# Kernel heap allocator debug output.
	#'KHEAP_DEBUG': True,

	# Slab allocator debug output.
	#'SLAB_DEBUG': True,

	# Address space manager debug output.
	#'ASPACE_DEBUG': True,

	# Process/thread management debug output.
	#'PROC_DEBUG': True,

	# Scheduler debug output.
	#'SCHED_DEBUG': True,
}

############################################
# Do not change anything below this point. #
############################################

import os

def check_validity(key, allowed):
	for a in allowed:
		if config[key] == a:
			return
	raise Exception, "Unknown value '%s' for config['%s']" % (config[key], key)

# Set architecture-specific settings.
check_validity('ARCH', ['x86'])
if config['ARCH'] == 'x86':
	check_validity('SUBARCH', ['ia32', 'amd64'])
	if config['SUBARCH'] == 'ia32':
		config['SUBARCH_IA32'] = True
		config['ARCH_32_BIT'] = True
	elif config['SUBARCH'] == 'amd64':
		config['SUBARCH_AMD64'] = True
		config['ARCH_64_BIT'] = True

	config['ARCH_LITTLE_ENDIAN'] = True
	config['ARCH_HAS_MEMCPY'] = True
	config['ARCH_HAS_MEMSET'] = True
	config['ARCH_HAS_MEMMOVE'] = True

# Set toolchain information.
if config['ARCH'] == 'x86' and config['SUBARCH'] == 'ia32':
	config['TOOLCHAIN_TARGET'] = 'i686-kiwi'
elif config['ARCH'] == 'x86' and config['SUBARCH'] == 'amd64':
	config['TOOLCHAIN_TARGET'] = 'x86_64-kiwi'

config['BUILD_DIR'] = os.path.join('build', '%s-%s' % (config['ARCH'], config['SUBARCH']))
