# Kiwi build system
# Copyright (C) 2009 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

import os
import sys
import tempfile
import shutil

Import('envmgr', 'config')

dist = envmgr['dist']

# Function to generate an ISO image.
def iso_image_func(target, source, env):
	grubdir = str(env['GRUBDIR'])
	kernel = str(env['KERNEL'])

	# Create the work directory.
	tmpdir = tempfile.mkdtemp('.kiwiiso')
	os.makedirs(os.path.join(tmpdir, 'boot', 'grub'))
	os.makedirs(os.path.join(tmpdir, 'kernel'))

	# Copy stuff into it.
	shutil.copy(os.path.join(grubdir, 'stage2_eltorito'), os.path.join(tmpdir, 'boot', 'grub'))
	shutil.copy(kernel, os.path.join(tmpdir, 'kernel'))

	# Create the GRUB menu.lst.
	f = open(os.path.join(tmpdir, 'boot', 'grub', 'menu.lst'), 'w')
	f.write('default 0\n')
	f.write('timeout 5\n\n')
	f.write('title Kiwi (%s)\n' % (config['ARCH']))
	f.write('	kernel /kernel/%s\n' % (os.path.basename(kernel)))
	f.close()

	# Create the ISO.
	if envmgr.verbose:
		verbose = ''
	else:
		verbose = '>> /dev/null 2>&1'
	ret = os.system('mkisofs -J -R -l -b boot/grub/stage2_eltorito ' + \
	                '-boot-load-size 4 -boot-info-table -no-emul-boot ' + \
	                '-o %s %s %s' % (target[0], tmpdir, verbose))
	if ret != 0:
		return ret

	# Clean up.
	shutil.rmtree(tmpdir)

dist['GRUBDIR'] = Dir('#source/boot/%s/grub' % (config['ARCH']))
dist['BUILDERS']['ISOImage'] = Builder(action=Action(iso_image_func, '$GENCOMSTR'))
