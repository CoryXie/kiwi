# Copyright (C) 2010 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

Import('envmgr', 'env', 'config')

sources = map(File, [
	'bios.S',
	'console.c',
	'cpu.c',
	'disk.c',
	'memory.c',
	'start.S',
	'video.c',
])

# Set the linker script path.
env['LDSCRIPT'] = env.LDScript('link.ld', 'link.ld.in')

# Build the stage 1 loaders.
env.Program('cdboot.elf', 'cdboot.S', LINKFLAGS=env['LINKFLAGS'] + ['-Wl,-Ttext,0x7C00', '-Wl,-N'])
env.Command('cdboot', 'cdboot.elf', Action('$OBJCOPY -O binary --strip-unneeded -R .note -R .comment $SOURCE $TARGET', '$GENCOMSTR'))
envmgr['dist']['CDBOOT'] = File('cdboot')

# Function to generate an ISO image.
def iso_image_func(target, source, env):
	import os, sys, tempfile, shutil

	cdboot = str(env['CDBOOT'])
	loader = str(env['LOADER'])
	kernel = str(env['KERNEL'])
	fsimage = str(env['FSIMAGE'])

	# Create the work directory.
	tmpdir = tempfile.mkdtemp('.kiwiiso')
	os.makedirs(os.path.join(tmpdir, 'boot'))
	os.makedirs(os.path.join(tmpdir, 'kiwi', 'modules'))

	# Copy stuff into it.
	shutil.copy(kernel, os.path.join(tmpdir, 'kiwi'))
	shutil.copy(fsimage, os.path.join(tmpdir, 'kiwi', 'modules'))
	for mod in env['MODULES']:
		shutil.copy(str(mod), os.path.join(tmpdir, 'kiwi', 'modules'))

	# Create the loader by concatenating the CD boot sector and the loader
	# together.
	f = open(os.path.join(tmpdir, 'boot', 'cdboot.img'), 'w')
	f.write(open(cdboot, 'r').read())
	f.write(open(loader, 'r').read())
	f.close()

	# Create the ISO.
	verbose = envmgr.verbose and '' or '>> /dev/null 2>&1'
	if os.system('mkisofs -J -R -l -b boot/cdboot.img -V "Kiwi CDROM" ' + \
	             '-boot-load-size 4 -boot-info-table -no-emul-boot ' + \
	             '-o %s %s %s' % (target[0], tmpdir, verbose)) != 0:
		print "Could not find mkisofs! Please ensure that it is installed."
		shutil.rmtree(tmpdir)
		return 1

	# Clean up.
	shutil.rmtree(tmpdir)
	return 0
def iso_image_emitter(target, source, env):
	return (target, source + [env['KERNEL'], env['LOADER'], env['CDBOOT'], env['FSIMAGE']] + env['MODULES'])
envmgr['dist']['BUILDERS']['ISOImage'] = Builder(action=Action(iso_image_func, '$GENCOMSTR'), emitter=iso_image_emitter)

Return('sources')
