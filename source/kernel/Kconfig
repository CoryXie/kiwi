# Copyright (C) 2010 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

###########################
menu "Kernel configuration"
###########################

config HANDLE_MAX
	int "Handle table size"
	default 1024
	help
	  Maximimum number of open handles for a process. Increasing this will
	  increase the amount of memory required for each process.

config KLOG_SIZE
	int "Kernel log buffer size"
	default 16384
	help
	  Size for the kernel log buffer (in characters).

###########################
menu "Architecture options"
###########################

if ARCH_AMD64 || ARCH_IA32
source "source/kernel/arch/x86/Kconfig"
endif

#######
endmenu
#######

#######################
menu "Platform options"
#######################

if PLATFORM_PC
source "source/kernel/platform/pc/Kconfig"
endif

#######
endmenu
#######

########################
menu "Debugging options"
	depends on DEBUG
########################

config SLAB_STATS
	bool "Slab allocator statistics"
	default n
	help
	  Enable extra statistics in the slab allocator. This is not enabled by
	  default as it causes a slight performance hit - the statistics are
	  modified using atomic operations which are serialising instructions.

config DEBUGGER_DELAY
	int "Time to wait for debugger connection"
	default 0
	help
	  If not 0, this option adds a delay in the kernel initialisation
	  process which allows time, for example, for GDB to be connected to
	  QEMU.

config PAGE_DEBUG
	bool "Physical memory debug output"
	default n
	help
	  Enable extra debug output in the physical memory manager. Be warned
	  that this will write a debug message on every page allocation and
	  deallocation.

config VMEM_DEBUG
	bool "Vmem allocator debug output"
	default n
	help
	  Enable extra debug output from the vmem resource allocator. Since
	  just about every allocation done by the kernel (pages, kernel heap,
	  object IDs) uses vmem in some way, this will generate a HUGE amount
	  of output.

config KHEAP_DEBUG
	bool "Kernel heap debug output"
	default n
	help
	  Enable extra debug output from the kernel heap manager.

config SLAB_DEBUG
	bool "Slab allocator debug output"
	default n
	help
	  Enable extra debug output from the slab allocator.

config VM_DEBUG
	bool "Virtual memory manager debug output"
	default n
	help
	  Enable extra debug output from the userspace virtual memory manager.

config PROC_DEBUG
	bool "Process/thread debug output"
	default n
	help
	  Enable extra debug output from the process/thread managers.

config SCHED_DEBUG
	bool "Scheduler debug output"
	default n
	help
	  Enable large amounts of debug output from the thread scheduler. This
	  will not print messages on every thread switch, however this can be
	  enabled by defining SCHED_OVERKILL_DEBUG to 1 in sched.c

config MODULE_DEBUG
	bool "Module loader debug output"
	default n
	help
	  Enable debug output from the module loader.

config OBJECT_DEBUG
	bool "Object manager debug output"
	default n
	help
	  Enable debug output from the object manager.

config FS_DEBUG
	bool "FS debug output"
	default n
	help
	  Enable debug output from the filesystem layer.

config CACHE_DEBUG
	bool "Page cache debug output"
	default n
	help
	  Enable debug output from the page cache.

config DEVICE_DEBUG
	bool "Device manager debug output"
	default n
	help
	  Enable debug output from the device manager.

config IPC_DEBUG
	bool "IPC debug output"
	default n
	help
	  Enable debug output from the IPC code.

config LRM_DEBUG
	bool "LRM debug output"
	default n
	help
	  Enable debug output from the low resource manager.

#######
endmenu
#######

source "source/kernel/modules/Kconfig"

#######
endmenu
#######
