# Kiwi build system
# Copyright (C) 2009 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

import os
import sys

Import('env', 'config')

# Set AMD64-specific compilation flags.
env['ASFLAGS'] += ['-m64']
env['CCFLAGS'] += ['-m64', '-mcmodel=kernel', '-mno-red-zone', '-fno-omit-frame-pointer']
env['LDFLAGS'] += ['-A', 'x86_64', '-m', 'elf_x86_64']

# Pull in x86 common code.
SConscript(dirs=['../common/x86'], exports=['env'])

# Add source files.
env['OBJFILES'] += [
	env.Object('arch.c'),
	env.Object('boot.S'),
	env.Object('context.c'),
	env.Object('descriptor.c'),
	env.Object('entry.S'),
	env.Object('kdbg.c'),
	env.Object('page.c'),
	env.Object('switch.S'),
]

# Generate the AP boot code.
if config['SMP']:
	def gen_inc_s(target, source, env):
		f = open(str(target[0]), 'w')
		f.write('.section .init.trampoline, "ax", @progbits\n')
		f.write('.incbin "ap_boot.bin"\n')
		f.close()
	env.Object('ap_boot.bin.o', 'ap_boot.S')
	env.Command('ap_boot.bin.elf', 'ap_boot.bin.o',
	            Action('$LINK -Ttext=0 -o $TARGET $SOURCE', None))
	env.Command('ap_boot.bin', 'ap_boot.bin.elf',
	            Action('$OBJCOPY -O binary $SOURCE $TARGET', None))
	env.Command('ap_boot.bin.S', 'ap_boot.bin',
	            Action(gen_inc_s, None))
	env.Command('ap_boot.o', ['ap_boot.bin.S'],
	            Action('$CC $ASFLAGS -c -o $TARGET $SOURCE -Wa,-I%s' %
	                       (os.path.abspath(str(File('ap_boot.bin').dir))), None))
	env['OBJFILES'].append(File('ap_boot.o'))
