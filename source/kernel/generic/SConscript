# Copyright (C) 2009 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

Import('env')

# Generate the version information file. Thanks to the use of MD5 file
# checksums, this won't be rebuilt unless the version info changes!
def gen_version_c(target, source, env):
	f = open(str(target[0]), 'w')
	f.write('int kiwi_ver_release = %d;\n' % (env['KIWI_VER_RELEASE']))
	f.write('int kiwi_ver_update = %d;\n' % (env['KIWI_VER_UPDATE']))
	f.write('int kiwi_ver_revision = %d;\n' % (env['KIWI_VER_REVISION']))
	f.write('const char *kiwi_ver_codename = "%s";\n' % (env['KIWI_VER_CODENAME']))
	f.write('const char *kiwi_ver_string = "%s";\n' % (env['KIWI_VER_STRING']))
	f.close()
AlwaysBuild(env.Command('version.c', [], env.Action(gen_version_c, None)))

sources = map(File, [
	'console/console.c',
	'console/font_8x8.c',
	'console/kprintf.c',

	'cpu/cpu.c',
	'cpu/fpu.c',
	'cpu/irq.c',
	'cpu/ipi.c',

	'io/context.c',
	'io/device.c',
	'io/ramfs.c',
	'io/vfs.c',

	'ipc/ipc.c',
	'ipc/pipe.c',

	'lib/do_printf.c',
	'lib/notifier.c',
	'lib/qsort.c',
	'lib/sprintf.c',
	'lib/string.c',

	'mm/kheap.c',
	'mm/malloc.c',
	'mm/page.c',
	'mm/safe.c',
	'mm/slab.c',
	'mm/tlb.c',
	'mm/vm/anon.c',
	'mm/vm/page.c',
	'mm/vm/vm.c',
	'mm/vmem.c',

	'proc/handle.c',
	'proc/process.c',
	'proc/sched.c',
	'proc/syscall.c',
	'proc/thread.c',

	'sync/condvar.c',
	'sync/mutex.c',
	'sync/rwlock.c',
	'sync/semaphore.c',
	'sync/spinlock.c',
	'sync/waitq.c',

	'time/timer.c',

	'types/avl.c',
	'types/bitmap.c',
	'types/hash.c',
	'types/radix.c',

	'args.c',
	'bootmod.c',
	'elf.c',
	'fatal.c',
	'init.c',
	'kdbg.c',
	'module.c',
	'symbol.c',
	'version.c',
])

Return('sources')
