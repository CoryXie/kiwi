#
# Copyright (C) 2010 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED AS IS AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

service org.kiwi.WindowServer 1 {
	# Surface ID type. Surface IDs are the same as their area ID. FIXME:
	# kernel type definitions.
	type SurfaceID int32;

	# Window ID type.
	type WindowID int32;

	# Structure representing a point.
	struct Point {
		int32 x;
		int32 y;
	};

	# Structure representing a rectangle size.
	struct Size {
		uint32 width;
		uint32 height;
	};

	# Structure representing a rectangle area on a surface.
	struct Rect {
		Point pos;
		Size size;
	};

	# Surface functions.
	function CreateSurface(Size size, out SurfaceID id);
	function DestroySurface(SurfaceID id);
	function GetSurfaceSize(SurfaceID id, out Size size);
	function ResizeSurface(SurfaceID id, Size size);

	# Window functions.
	function CreateWindow(out WindowID id);
	function DestroyWindow(WindowID id);
	function CloseWindow(WindowID id);
	function GetWindowTitle(WindowID id, out string title);
	function SetWindowTitle(WindowID id, string title);
	function GetWindowStyle(WindowID id, out uint32 style);
	function SetWindowStyle(WindowID id, uint32 style);
	function GetWindowLevel(WindowID id, out uint32 level);
	function SetWindowLevel(WindowID id, uint32 level);
	function GetWindowFrame(WindowID id, out Rect rect);
	function ResizeWindow(WindowID id, Size size);
	function MoveWindow(WindowID id, Point pos);
	function GetWindowState(WindowID id, out uint32 state);
	function SetWindowState(WindowID id, uint32 state);
	function ActivateWindow(WindowID id);
	function GetWindowSurface(WindowID id, out SurfaceID sid);
	function UpdateWindow(WindowID id, Rect rect);

	# Window events. TODO: Once class serialization is done, use it here
	# with the Event classes.
	event OnMouseMove(WindowID id, int64 time, uint32 modifiers, Point pos, uint32 buttons);
	event OnMousePress(WindowID id, int64 time, uint32 modifiers, Point pos, uint32 buttons);
	event OnMouseRelease(WindowID id, int64 time, uint32 modifiers, Point pos, uint32 buttons);
	event OnKeyPress(WindowID id, int64 time, uint32 modifiers, int32 key, string text);
	event OnKeyRelease(WindowID id, int64 time, uint32 modifiers, int32 key, string text);
	event OnWindowClose(WindowID id);
	event OnWindowTitleChange(WindowID id);
	event OnWindowStateChange(WindowID id, uint32 state, uint32 prev);
	event OnWindowResize(WindowID id, Size size, Size prev);
};
