# Kiwi core kernel system call definitions
# Copyright (C) 2009 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

Service(0)

Syscall('kputch',		['char'])
Syscall('module_load',		['ptr_t', 'ptr_t'])
Syscall('handle_close',		['handle_t'])
Syscall('handle_type',		['handle_t'])
Syscall('handle_wait',		['handle_t', 'int', 'timeout_t'])
Syscall('handle_wait_multiple',	['ptr_t', 'ptr_t', 'size_t', 'timeout_t'])
Syscall('fs_file_create',	['ptr_t'])
Syscall('fs_file_open',		['ptr_t', 'int'])
Syscall('fs_file_read',		['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('fs_file_write',	['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('fs_file_resize',	['handle_t', 'file_size_t'])
Syscall('fs_dir_create',	['ptr_t'])
Syscall('fs_dir_open',		['ptr_t', 'int'])
Syscall('fs_dir_read',		['handle_t', 'ptr_t', 'size_t', 'offset_t'])
Syscall('fs_handle_seek',	['handle_t', 'int', 'offset_t', 'ptr_t'])
Syscall('fs_handle_info',	['handle_t', 'ptr_t'])
Syscall('fs_symlink_create',	['ptr_t', 'ptr_t'])
Syscall('fs_symlink_read',	['ptr_t', 'ptr_t', 'size_t'])
Syscall('fs_mount',		['ptr_t', 'ptr_t', 'ptr_t', 'int'])
Syscall('fs_unmount',		['ptr_t'])
Syscall('fs_getcwd',		['ptr_t', 'size_t'])
Syscall('fs_setcwd',		['ptr_t'])
Syscall('fs_setroot',		['ptr_t'])
Syscall('fs_info',		['ptr_t', 'bool', 'ptr_t'])
Syscall('fs_link',		['ptr_t', 'ptr_t'])
Syscall('fs_unlink',		['ptr_t'])
Syscall('fs_rename',		['ptr_t', 'ptr_t'])
Syscall('vm_map_anon',		['ptr_t', 'size_t', 'int', 'ptr_t'])
Syscall('_vm_map_file',		['ptr_t'])
Syscall('_vm_map_device',	['ptr_t'])
Syscall('vm_unmap',		['ptr_t', 'size_t'])
Syscall('process_create',	['ptr_t', 'ptr_t', 'ptr_t', 'bool'])
Syscall('process_replace',	['ptr_t', 'ptr_t', 'ptr_t', 'bool'])
Syscall('process_duplicate',	['ptr_t'])
Syscall('process_open',		['identifier_t'])
Syscall('process_id',		['handle_t'])
Syscall('process_exit',		['int'])
Syscall('device_open',		['ptr_t'])
Syscall('device_read',		['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('device_write',		['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('_device_request',	['ptr_t'])
Syscall('thread_create',	['ptr_t', 'ptr_t', 'size_t', 'ptr_t', 'ptr_t'])
Syscall('thread_open',		['identifier_t'])
Syscall('thread_id',		['handle_t'])
Syscall('thread_exit',		['int'])
