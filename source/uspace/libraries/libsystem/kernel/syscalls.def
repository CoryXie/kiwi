# Copyright (C) 2009-2010 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

Service(0)

Syscall('module_load',			['ptr_t', 'ptr_t'])
Syscall('object_type',			['handle_t'])
Syscall('object_wait',			['handle_t', 'int', 'useconds_t'])
Syscall('object_wait_multiple',		['ptr_t', 'ptr_t', 'size_t', 'useconds_t'])
Syscall('handle_get_flags',		['handle_t'])
Syscall('handle_set_flags',		['handle_t', 'int'])
Syscall('handle_close',			['handle_t'])
Syscall('fs_file_create',		['ptr_t'])
Syscall('fs_file_open',			['ptr_t', 'int'])
Syscall('fs_file_read',			['handle_t', 'ptr_t', 'size_t', 'ptr_t'])
Syscall('fs_file_pread',		['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('fs_file_write',		['handle_t', 'ptr_t', 'size_t', 'ptr_t'])
Syscall('fs_file_pwrite',		['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('fs_file_resize',		['handle_t', 'offset_t'])
Syscall('fs_dir_create',		['ptr_t'])
Syscall('fs_dir_open',			['ptr_t', 'int'])
Syscall('fs_dir_read',			['handle_t', 'ptr_t', 'size_t', 'offset_t'])
Syscall('fs_handle_seek',		['handle_t', 'int', 'rel_offset_t', 'ptr_t'])
Syscall('fs_handle_info',		['handle_t', 'ptr_t'])
Syscall('fs_handle_sync',		['handle_t'])
Syscall('fs_symlink_create',		['ptr_t', 'ptr_t'])
Syscall('fs_symlink_read',		['ptr_t', 'ptr_t', 'size_t'])
Syscall('fs_mount',			['ptr_t', 'ptr_t', 'ptr_t', 'int'])
Syscall('fs_unmount',			['ptr_t'])
Syscall('fs_sync',			[])
Syscall('fs_getcwd',			['ptr_t', 'size_t'])
Syscall('fs_setcwd',			['ptr_t'])
Syscall('fs_setroot',			['ptr_t'])
Syscall('fs_info',			['ptr_t', 'bool', 'ptr_t'])
Syscall('fs_link',			['ptr_t', 'ptr_t'])
Syscall('fs_unlink',			['ptr_t'])
Syscall('fs_rename',			['ptr_t', 'ptr_t'])
Syscall('_vm_map',			['ptr_t'])
Syscall('vm_unmap',			['ptr_t', 'size_t'])
Syscall('process_create',		['ptr_t', 'ptr_t', 'ptr_t', 'int', 'ptr_t', 'int'])
Syscall('process_replace',		['ptr_t', 'ptr_t', 'ptr_t', 'ptr_t', 'int'])
Syscall('process_clone',		['ptr_t'])
Syscall('process_open',			['process_id_t'])
Syscall('process_id',			['handle_t'])
Syscall('process_status',		['handle_t', 'ptr_t'])
Syscall('process_exit',			['int'])
Syscall('device_open',			['ptr_t'])
Syscall('device_read',			['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('device_write',			['handle_t', 'ptr_t', 'size_t', 'offset_t', 'ptr_t'])
Syscall('_device_request',		['ptr_t'])
Syscall('thread_create',		['ptr_t', 'ptr_t', 'size_t', 'ptr_t', 'ptr_t'])
Syscall('thread_open',			['thread_id_t'])
Syscall('thread_id',			['handle_t'])
Syscall('thread_exit',			['int'])
Syscall('thread_usleep',		['useconds_t'])
Syscall('semaphore_create',		['ptr_t', 'size_t'])
Syscall('semaphore_open',		['ptr_t', 'size_t'])
Syscall('semaphore_id',			['handle_t'])
Syscall('semaphore_down',		['handle_t', 'useconds_t'])
Syscall('semaphore_up',			['handle_t', 'size_t'])
Syscall('ipc_port_create',		[])
Syscall('ipc_port_open',		['port_id_t'])
Syscall('ipc_port_id',			['handle_t'])
Syscall('ipc_port_listen',		['handle_t', 'useconds_t'])
Syscall('ipc_connection_open',		['port_id_t'])
Syscall('ipc_message_send',		['handle_t', 'uint32_t', 'ptr_t', 'size_t'])
Syscall('ipc_message_sendv',		['handle_t', 'ptr_t', 'size_t'])
Syscall('ipc_message_peek',		['handle_t', 'useconds_t', 'ptr_t', 'ptr_t'])
Syscall('ipc_message_receive',		['handle_t', 'useconds_t', 'ptr_t', 'ptr_t', 'size_t'])
