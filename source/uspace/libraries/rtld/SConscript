# Copyright (C) 2009-2010 Alex Smith
#
# Kiwi is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Kiwi
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.

Import('env', 'config')

sources = map(File, [
	'args.c',
	'export.c',
	'image.c',
	'main.c',
	'symbol.c',
	'syscalls.S',
	'utility.c',
])

# Generate the system call functions.
env.Sysgen('syscalls.S', 'syscalls.def')

# Get the list of architecture-specific source files.
arch_sources = SConscript(dirs=['arch/%s' % (config['ARCH'])], exports=['env'])

# Figure out the path to the linker script. A special script is required to
# ensure that the RTLD is linked to run at an address that will not conflict
# with real binaries.
ldscript = File('arch/%s/link.ld' % (config['ARCH']))

# Copy the architecture header in.
Command('arch.h', 'arch/%s/arch.h' % (config['ARCH']), Action('cp $SOURCE $TARGET', None))

# Build the RTLD from these sources. The RTLD must be statically linked, and
# should not use any external libraries.
target = env.Program('rtld-%s' % (config['ARCH']), arch_sources + sources,
	LDSCRIPT=ldscript,
	LINKFLAGS='-static -nostdlib -Wl,-T,$LDSCRIPT',
	CCFLAGS=env['CCFLAGS'] + ['-ffreestanding']
)

# Make the RTLD get rebuilt if its linker script changes.
Depends(target, ldscript)
